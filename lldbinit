command script import ~/git/lldb_utilities/lldb_utilities.py

command script import lldb.macosx.crashlog
command script import lldb.macosx.heap

command alias block expr struct Block_layout { void *isa; volatile int32_t flags; int32_t reserved;  void (*invoke)(void *, ...); }; *(struct Block_layout *)
command alias -- il target modules lookup -v -a %1
command alias bl breakpoint list
command alias bd breakpoint delete

#log enable -f /tmp/lldb-log.txt lldb api process

# target stop-hook add -P lldb_utilities.IgnoreBreakpointByReasonDescriptionStopHook -k ignore_string -v EXC_RESOURCE
# target stop-hook add -P lldb_utilities.IgnoreMemoryResourceExceptionBreakpointStopHook

# https://github.com/llvm/llvm-project/blob/c65fb80b73aa5087a4bba79e61d96b4d652e1b54/lldb/source/Core/Module.cpp#L1517
settings set target.load-script-from-symbol-file true

# https://github.com/llvm/llvm-project/blob/c65fb80b73aa5087a4bba79e61d96b4d652e1b54/lldb/source/Plugins/DynamicLoader/Darwin-Kernel/DynamicLoaderDarwinKernel.cpp#L1148
settings set plugin.dynamic-loader.darwin-kernel.load-kexts true

# https://github.com/llvm/llvm-project/blob/c65fb80b73aa5087a4bba79e61d96b4d652e1b54/lldb/test/API/macosx/ignore_exceptions/TestIgnoredExceptions.py#L31
settings set platform.plugin.darwin.ignored-exceptions EXC_RESOURCE

